name: Build APK (Flutter)

on:
  push:
    branches: [ main ]          # غيّرها لو عايز
      
jobs:
  build-apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android platforms/build-tools
        shell: bash
        run: |
          # نحاول نقرأ compileSdk من Gradle ونوفّر نفس المنصّة؛ لو مش موجودة نfallback
          CSK=$(grep -Po 'compileSdk\s*=\s*\K[0-9]+' android/app/build.gradle.kts \
               || grep -Po 'compileSdk\s*[=:]\s*\K[0-9]+' android/app/build.gradle \
               || echo 36)
          echo "Detected compileSdk=$CSK"
          yes | sdkmanager --licenses >/dev/null 2>&1 || true
          sdkmanager "platform-tools" || true
          sdkmanager "platforms;android-${CSK}" || sdkmanager "platforms;android-35" || sdkmanager "platforms;android-34"
          sdkmanager "build-tools;${CSK}.0.0" || sdkmanager "build-tools;35.0.0" || sdkmanager "build-tools;34.0.0"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      # (اختياري) لو محتاج google-services.json من Secret
      # - name: Restore google-services.json
      #   run: |
      #     echo "${{ secrets.ANDROID_GOOGLE_SERVICES_JSON_BASE64 }}" | base64 -d > android/app/google-services.json

      - name: Restore keystore from secrets
        shell: bash
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release-keystore.jks
          echo "ANDROID_KEYSTORE_PATH=$PWD/android/app/release-keystore.jks" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}"       >> $GITHUB_ENV
          echo "ANDROID_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> $GITHUB_ENV

      - name: Build APK (release)
        run: flutter build apk --release --split-per-abi

      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apk-release
          path: |
            build/app/outputs/flutter-apk/*-release.apk
            android/app/build/outputs/apk/release/*.apk
          if-no-files-found: warn
